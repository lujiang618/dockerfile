upstream lbs {
    server 127.0.0.1:3081 weight=1;
    # server 127.0.0.1:3081 down; # down 表示服务器下线 不可用
    server 127.0.0.1:3082 weight=1;
    server 127.0.0.1:3083 weight=1;
    # server 127.0.0.1:3083 backup; # backup 表示备用服务器
}

server {
    listen       80;
    listen  [::]:80;

    server_name  127.0.0.1;

    #access_log  /var/log/nginx/host.access.log  main;

    # location / {
    #     root   /usr/local/www;
    #     index  index.html index.htm;
    # }
     location / {
        proxy_pass http://lbs;
        proxy_set_header Host $proxy_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 这种情况， proxy_paas最后的/ 是有区别的（是否忽略location匹配的内容）， 有斜线 /test/abc --> /abc 没有斜线 /test/abc --> /test/abc
    location /test {
        proxy_pass http://127.0.0.1:3071;
    }

    # 直接访问nodejs启动的服务，如果最后没有/ 则会出现404. 这个是由nodejs本身造成的，它是app.use('/', function(){}),
    # ~* 不区分大小写的正则匹配， ~ 区分大小写的正则匹配
    # 这种情况， proxy_paas无论是否有/，都会忽略location匹配的内容。 如果加/ 则是在整个请求的最后都会加 / ， 如/signal/3071/script/abc.js --> /signal/3071/script/abc.js/
    # location ~* ^/signal/(.*)$ {
    #     proxy_pass http://127.0.0.1:$1;
    #     proxy_http_version 1.1;
    #     proxy_request_buffering off;
    #     proxy_set_header Connection "";
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";

    #     # rewrite "^/signal/(.*)/(.*)$" /$2 break;
    # }

    error_page  404              /404.html;
    location = /404.html {
        root   /usr/local/www/;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/www/;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

